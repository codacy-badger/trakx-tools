// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Trakx.Data.Models.Index;

namespace Trakx.Data.Models.Migrations
{
    [DbContext(typeof(IndexRepositoryContext))]
    [Migration("20191224113635_CreateIndexRepository")]
    partial class CreateIndexRepository
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Trakx.Data.Models.Index.ComponentDefinition", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<Guid?>("ComponentDefinition")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Decimals")
                        .HasColumnType("int");

                    b.Property<Guid?>("IndexDefinitionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(512)")
                        .HasMaxLength(512);

                    b.Property<decimal>("Quantity")
                        .HasColumnType("decimal(20,0)");

                    b.Property<string>("Symbol")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("ComponentDefinition")
                        .IsUnique()
                        .HasFilter("[ComponentDefinition] IS NOT NULL");

                    b.HasIndex("IndexDefinitionId");

                    b.ToTable("ComponentDefinition");
                });

            modelBuilder.Entity("Trakx.Data.Models.Index.ComponentValuation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IndexValuationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(38, 18)");

                    b.Property<string>("QuoteCurrency")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Value")
                        .HasColumnType("decimal(38, 18)");

                    b.HasKey("Id");

                    b.HasIndex("IndexValuationId");

                    b.ToTable("ComponentValuation");
                });

            modelBuilder.Entity("Trakx.Data.Models.Index.IndexDefinition", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("InitialValuationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(512)")
                        .HasMaxLength(512);

                    b.Property<int>("NaturalUnit")
                        .HasColumnType("int");

                    b.Property<string>("Symbol")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("InitialValuationId");

                    b.ToTable("IndexDefinitions");
                });

            modelBuilder.Entity("Trakx.Data.Models.Index.IndexValuation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("NetAssetValue")
                        .HasColumnType("decimal(38, 18)");

                    b.Property<string>("QuoteCurrency")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("IndexValuation");
                });

            modelBuilder.Entity("Trakx.Data.Models.Index.ComponentDefinition", b =>
                {
                    b.HasOne("Trakx.Data.Models.Index.ComponentValuation", "InitialValuation")
                        .WithOne("ComponentDefinition")
                        .HasForeignKey("Trakx.Data.Models.Index.ComponentDefinition", "ComponentDefinition");

                    b.HasOne("Trakx.Data.Models.Index.IndexDefinition", null)
                        .WithMany("ComponentDefinitions")
                        .HasForeignKey("IndexDefinitionId");
                });

            modelBuilder.Entity("Trakx.Data.Models.Index.ComponentValuation", b =>
                {
                    b.HasOne("Trakx.Data.Models.Index.IndexValuation", null)
                        .WithMany("ComponentValuations")
                        .HasForeignKey("IndexValuationId");
                });

            modelBuilder.Entity("Trakx.Data.Models.Index.IndexDefinition", b =>
                {
                    b.HasOne("Trakx.Data.Models.Index.IndexValuation", "InitialValuation")
                        .WithMany()
                        .HasForeignKey("InitialValuationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
